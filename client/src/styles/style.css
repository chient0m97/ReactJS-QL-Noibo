#root{
    width: 100%;
    height: 100%;
}
.ant-menu-dark .ant-menu-item  a{
    color: #fff;
}
.modal-loading{
    position: fixed;
    width: 100%;
    height: 100%;
    background-color: rgba(0,0,0,0.65);
}
.loading-ring
{
  position: absolute;
  /*Moves the word loading down and into the center of the page*/
  top: 50%;
  left: 50%;
  /*Moves the circle and loading word to the center of the page*/
  transform: translate(-50%,-50%);
  width: 150px;
  height: 150px;
  /*Makes the word loading have a transparent background*/ 
  background: transparent;
  /*Creates a square*/
  border: 3px solid #3c3c3c;
  /*turns the square to a circle*/
  border-radius: 50%;
  /* Aligns the word Loading to the right so it is in the center of the circle*/
  text-align: center;
  /*Moves the word Loading down and into the center of the circle*/
  line-height: 150px;
  /*Set font type*/
  font-family: sans-serif;
  /*Size font*/
  font-size: 20px;
  /*Sets font color*/
  color: #FF69B4;
  /*Spaces out letters*/
  letter-spacing: 4px;
  /*makes text uppercase*/
  text-transform: uppercase;
  /*To create glow effect*/
  text-shadow: 0 0 10px #FF69B4;
  /* Creates dark shadow around circle*/
  box-shadow: 0 0 20px rgb(0,0,0,.5);
}
/*Creates yellow spinner ring*/
.loading-ring:before
{
  content: '';
  position: absolute; 
  /*originally set to 0px, but it was off, so changed to -3px to align with the loading circle*/
  top: -3px;
  left: -3px;
  width: 100%;
  height: 100%;
  /*Creates half a circle for the spinner portion*/
  border: 3px solid transparent;
  /*creates only top and right square border portion*/
  border-top: 3px solid #FF69B4;
  border-right: 3px solid #FF69B4;
  /*turns the box radius into a half circle :) */
  border-radius: 50%;
  /*creates animation*/
  animation: animateCircle 2s linear infinite;
}
/*Creates dial for the spinner to follow*/
.loading-ring span 
{
  /*display: block; starts a new line for the HTML span element*/ 
  display: block;
  position: absolute;
  /* The calc() function takes a single expression as its parameter, with the expression's result used as the value */
  top: calc(50% - 2px);
  left: 50%;
  width: 50%;
  height: 4px;
  background: transparent;
  transform-origin: left;
  animation: animate 2s linear infinite;  
}
/*creates the ball for the spinner to follow*/
.loading-ring span:before 
{
  content: '';
  position: absolute;
  width: 16px;
  height: 16px;
  border-radius: 50%;
  background: #FF69B4;
  /*moves the ball to the top of the line created in the previous span*/
  top: -6px;
  right: -8px;
  box-shadow: 0 0 20px #FF69B4;
}
/*Now the fun part, the ring will move with the ball that we set with the animate and animateCircle variables*/
@keyframes animateCircle 
{
  0%
  {
    transform: rotate(0deg);
  }
  100%
  {
    transform: rotate(360deg);
  }
}
@keyframes animate
{
  0%
  {
    transform: rotate(45deg);
  }
  100%
  {
    transform: rotate(405deg);
  }
}
.an{
  display: none;
}
.abc{
  height: 50px;
}
#components-dropdown-demo-dropdown-button .ant-dropdown-button {
  margin: 0 8 8 0;
}
.ant-modal-header {
  padding: 16px 24px;
  border-radius: 4px 4px 0px 0px;
}
.ant-modal-content {
  position: relative;
  background-clip: padding-box;
  border: 0px;
  border-radius: 4px;
  pointer-events: auto;
}
.ant-row {
  position: relative;
  height: auto;
  margin-right: 0px;
  margin-top: 0px;
  margin-bottom: 0px;
  margin-left: 0px;
  zoom: 1;
  display: block;
  box-sizing: border-box;
}
.ant-table {
  font-size: 14px;
  font-variant: tabular-nums;
  line-height: 1.5;
  list-style: none;
  font-feature-settings: 'tnum';
}
.ant-modal-body{
  padding-bottom: 0px;
  padding-top: 0px;
}
